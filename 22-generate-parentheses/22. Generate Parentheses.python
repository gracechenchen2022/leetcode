class Solution(object):
    def generateParenthesis(self, n):
        """
        :type n: int
        :rtype: List[str]
        """
        res = []
        def backtrack(curr, left, right):
            if len(curr) == 2 * n:
                res.append(curr)
                return

            if left < n:
                backtrack(curr+'(', left + 1, right)
            if right < left:
                backtrack(curr + ')', left, right + 1)
        backtrack('',0,0)
        return res
        