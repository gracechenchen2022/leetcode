class Solution(object):
    def divide(self, dividend, divisor):
        """
        :type dividend: int
        :type divisor: int
        :rtype: int
        """
        INT_MAX = 2**31 - 1
        INT_MIN = -2**31
        
        # 处理特殊情况
        if divisor == 0:
            return INT_MAX
        if dividend == 0:
            return 0
        if dividend == INT_MIN and divisor == -1:
            return INT_MAX
        
        # 记录结果的符号
        negative = (dividend < 0) != (divisor < 0)
        
        # 将 dividend 和 divisor 都转换为正数
        dividend = abs(dividend)
        divisor = abs(divisor)
        
        # 记录商的值
        quotient = 0
        
        # 不断使用减法和位移
        while dividend >= divisor:
            temp = divisor
            multiple = 1
            while dividend >= (temp << 1):
                temp <<= 1
                multiple <<= 1
            dividend -= temp
            quotient += multiple
        
        # 根据符号返回最终的结果
        if negative:
            quotient = -quotient
        
        return min(max(quotient, INT_MIN), INT_MAX)