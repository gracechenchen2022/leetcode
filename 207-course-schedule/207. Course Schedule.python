class Solution(object):
    def canFinish(self, numCourses, prerequisites):
        graph=[[] for _ in range(numCourses)]
        for course, preq in prerequisites:
            graph[preq].append(course)
        state = [0] * numCourses
        result = []

        def dfs(course):
            if state[course] == 1:  
                return False
            if state[course] == 2:
                return True
            state[course] = 1
            for next_course in graph[course]:
                    if not dfs(next_course):
                        return False
            state[course] = 2
            return True
        for course in range(numCourses):
            if not dfs(course):
                return False


        return True