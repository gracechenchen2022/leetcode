# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def averageOfLevels(self, root):
        """
        :type root: TreeNode
        :rtype: List[float]
        """
        if not root:
            return []
        queue = deque([root])
        average_values = []
        while queue:
            level_length = len(queue)
            level_sum = 0
            for i in range(level_length):
                node = queue.popleft()
                level_sum += node.val
                
                
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
          
            average_values.append(level_sum/ float(level_length))
        return average_values